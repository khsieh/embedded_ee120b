
khsie003_amalu001_lab1_5.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00000102  00000176  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000102  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000176  2**0
                  CONTENTS, READONLY
  3 .debug_aranges 00000028  00000000  00000000  000001a6  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_info   00000264  00000000  00000000  000001ce  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_abbrev 000000f1  00000000  00000000  00000432  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_line   00000128  00000000  00000000  00000523  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_frame  00000034  00000000  00000000  0000064c  2**2
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_str    00000161  00000000  00000000  00000680  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_loc    000001fa  00000000  00000000  000007e1  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_ranges 00000060  00000000  00000000  000009db  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	4b c0       	rjmp	.+150    	; 0x9c <__bad_interrupt>
   6:	00 00       	nop
   8:	49 c0       	rjmp	.+146    	; 0x9c <__bad_interrupt>
   a:	00 00       	nop
   c:	47 c0       	rjmp	.+142    	; 0x9c <__bad_interrupt>
   e:	00 00       	nop
  10:	45 c0       	rjmp	.+138    	; 0x9c <__bad_interrupt>
  12:	00 00       	nop
  14:	43 c0       	rjmp	.+134    	; 0x9c <__bad_interrupt>
  16:	00 00       	nop
  18:	41 c0       	rjmp	.+130    	; 0x9c <__bad_interrupt>
  1a:	00 00       	nop
  1c:	3f c0       	rjmp	.+126    	; 0x9c <__bad_interrupt>
  1e:	00 00       	nop
  20:	3d c0       	rjmp	.+122    	; 0x9c <__bad_interrupt>
  22:	00 00       	nop
  24:	3b c0       	rjmp	.+118    	; 0x9c <__bad_interrupt>
  26:	00 00       	nop
  28:	39 c0       	rjmp	.+114    	; 0x9c <__bad_interrupt>
  2a:	00 00       	nop
  2c:	37 c0       	rjmp	.+110    	; 0x9c <__bad_interrupt>
  2e:	00 00       	nop
  30:	35 c0       	rjmp	.+106    	; 0x9c <__bad_interrupt>
  32:	00 00       	nop
  34:	33 c0       	rjmp	.+102    	; 0x9c <__bad_interrupt>
  36:	00 00       	nop
  38:	31 c0       	rjmp	.+98     	; 0x9c <__bad_interrupt>
  3a:	00 00       	nop
  3c:	2f c0       	rjmp	.+94     	; 0x9c <__bad_interrupt>
  3e:	00 00       	nop
  40:	2d c0       	rjmp	.+90     	; 0x9c <__bad_interrupt>
  42:	00 00       	nop
  44:	2b c0       	rjmp	.+86     	; 0x9c <__bad_interrupt>
  46:	00 00       	nop
  48:	29 c0       	rjmp	.+82     	; 0x9c <__bad_interrupt>
  4a:	00 00       	nop
  4c:	27 c0       	rjmp	.+78     	; 0x9c <__bad_interrupt>
  4e:	00 00       	nop
  50:	25 c0       	rjmp	.+74     	; 0x9c <__bad_interrupt>
  52:	00 00       	nop
  54:	23 c0       	rjmp	.+70     	; 0x9c <__bad_interrupt>
  56:	00 00       	nop
  58:	21 c0       	rjmp	.+66     	; 0x9c <__bad_interrupt>
  5a:	00 00       	nop
  5c:	1f c0       	rjmp	.+62     	; 0x9c <__bad_interrupt>
  5e:	00 00       	nop
  60:	1d c0       	rjmp	.+58     	; 0x9c <__bad_interrupt>
  62:	00 00       	nop
  64:	1b c0       	rjmp	.+54     	; 0x9c <__bad_interrupt>
  66:	00 00       	nop
  68:	19 c0       	rjmp	.+50     	; 0x9c <__bad_interrupt>
  6a:	00 00       	nop
  6c:	17 c0       	rjmp	.+46     	; 0x9c <__bad_interrupt>
  6e:	00 00       	nop
  70:	15 c0       	rjmp	.+42     	; 0x9c <__bad_interrupt>
  72:	00 00       	nop
  74:	13 c0       	rjmp	.+38     	; 0x9c <__bad_interrupt>
  76:	00 00       	nop
  78:	11 c0       	rjmp	.+34     	; 0x9c <__bad_interrupt>
  7a:	00 00       	nop
  7c:	0f c0       	rjmp	.+30     	; 0x9c <__bad_interrupt>
  7e:	00 00       	nop
  80:	0d c0       	rjmp	.+26     	; 0x9c <__bad_interrupt>
  82:	00 00       	nop
  84:	0b c0       	rjmp	.+22     	; 0x9c <__bad_interrupt>
  86:	00 00       	nop
  88:	09 c0       	rjmp	.+18     	; 0x9c <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e4       	ldi	r29, 0x40	; 64
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61
  98:	02 d0       	rcall	.+4      	; 0x9e <main>
  9a:	31 c0       	rjmp	.+98     	; 0xfe <_exit>

0000009c <__bad_interrupt>:
  9c:	b1 cf       	rjmp	.-158    	; 0x0 <__vectors>

0000009e <main>:

int main(void)
{
	unsigned char lights = 0;
	unsigned char PA = 0;
	DDRA = 0x00; PORTA = 0xFF; 
  9e:	11 b8       	out	0x01, r1	; 1
  a0:	8f ef       	ldi	r24, 0xFF	; 255
  a2:	82 b9       	out	0x02, r24	; 2
	DDRC = 0xFF; PORTC = 0x00;
  a4:	87 b9       	out	0x07, r24	; 7
  a6:	18 b8       	out	0x08, r1	; 8

#include <avr/io.h>

//x is the word to be modified, k-th bit to modify, b is the new bit
unsigned char SetBit(unsigned char x, unsigned char k, unsigned b){
	return(b?x|(0x01<<k):x&~(0x01<<k));
  a8:	21 e0       	ldi	r18, 0x01	; 1
  aa:	30 e0       	ldi	r19, 0x00	; 0
	DDRA = 0x00; PORTA = 0xFF; 
	DDRC = 0xFF; PORTC = 0x00;
	
    while(1)
    {
        PA = PINA & 0x0F;
  ac:	80 b1       	in	r24, 0x00	; 0
  ae:	8f 70       	andi	r24, 0x0F	; 15

#include <avr/io.h>

//x is the word to be modified, k-th bit to modify, b is the new bit
unsigned char SetBit(unsigned char x, unsigned char k, unsigned b){
	return(b?x|(0x01<<k):x&~(0x01<<k));
  b0:	92 2f       	mov	r25, r18
  b2:	8d 30       	cpi	r24, 0x0D	; 13
  b4:	08 f4       	brcc	.+2      	; 0xb8 <main+0x1a>
  b6:	93 2f       	mov	r25, r19
  b8:	8a 30       	cpi	r24, 0x0A	; 10
  ba:	10 f0       	brcs	.+4      	; 0xc0 <main+0x22>
  bc:	92 60       	ori	r25, 0x02	; 2
  be:	01 c0       	rjmp	.+2      	; 0xc2 <main+0x24>
  c0:	9d 7f       	andi	r25, 0xFD	; 253
  c2:	87 30       	cpi	r24, 0x07	; 7
  c4:	10 f0       	brcs	.+4      	; 0xca <main+0x2c>
  c6:	94 60       	ori	r25, 0x04	; 4
  c8:	01 c0       	rjmp	.+2      	; 0xcc <main+0x2e>
  ca:	9b 7f       	andi	r25, 0xFB	; 251
  cc:	85 30       	cpi	r24, 0x05	; 5
  ce:	10 f0       	brcs	.+4      	; 0xd4 <main+0x36>
  d0:	98 60       	ori	r25, 0x08	; 8
  d2:	01 c0       	rjmp	.+2      	; 0xd6 <main+0x38>
  d4:	97 7f       	andi	r25, 0xF7	; 247
  d6:	83 30       	cpi	r24, 0x03	; 3
  d8:	10 f0       	brcs	.+4      	; 0xde <main+0x40>
  da:	90 61       	ori	r25, 0x10	; 16
  dc:	01 c0       	rjmp	.+2      	; 0xe0 <main+0x42>
  de:	9f 7e       	andi	r25, 0xEF	; 239
  e0:	88 23       	and	r24, r24
  e2:	31 f0       	breq	.+12     	; 0xf0 <main+0x52>
  e4:	49 2f       	mov	r20, r25
  e6:	40 62       	ori	r20, 0x20	; 32
  e8:	85 30       	cpi	r24, 0x05	; 5
  ea:	28 f4       	brcc	.+10     	; 0xf6 <main+0x58>
  ec:	94 2f       	mov	r25, r20
  ee:	01 c0       	rjmp	.+2      	; 0xf2 <main+0x54>
  f0:	9f 7d       	andi	r25, 0xDF	; 223
  f2:	90 64       	ori	r25, 0x40	; 64
  f4:	02 c0       	rjmp	.+4      	; 0xfa <main+0x5c>
  f6:	9f 7b       	andi	r25, 0xBF	; 191
  f8:	90 62       	ori	r25, 0x20	; 32
		lights = SetBit(lights, 2, PA >= 7);
		lights = SetBit(lights, 3, PA >= 5);
		lights = SetBit(lights, 4, PA >= 3);
		lights = SetBit(lights, 5, PA >= 1);
		lights = SetBit(lights, 6, PA <= 4);
		PORTC = lights;
  fa:	98 b9       	out	0x08, r25	; 8
  fc:	d7 cf       	rjmp	.-82     	; 0xac <main+0xe>

000000fe <_exit>:
  fe:	f8 94       	cli

00000100 <__stop_program>:
 100:	ff cf       	rjmp	.-2      	; 0x100 <__stop_program>
